; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".

[unix_http_server]
;file=/tmp/supervisor.sock   ; (the path to the socket file)
file=/var/run/supervisor.sock   ; (the path to the socket file)
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

;[inet_http_server]         ; inet (TCP) server disabled by default
;port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

[supervisord]
;logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
;pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)
;umask=022                   ; (process file creation umask;default 022)
;user=chrism                 ; (default is current user, required if root)
;identifier=supervisor       ; (supervisord identifier, default is 'supervisor')
;directory=/tmp              ; (default is not to cd during start)
;nocleanup=true              ; (don't clean up tempfiles at start;default false)
;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)
;environment=KEY="value"     ; (key value pairs to add to environment)
;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
;serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as http_username if set
;password=123                ; should be same as http_password if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.

;[program:theprogramname]
;command=/bin/cat              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
;exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)

; The below sample eventlistener section shows all possible
; eventlistener subsection values, create one or more 'real'
; eventlistener: sections to be able to handle event notifications
; sent by supervisor.

;[eventlistener:theeventlistenername]
;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;events=EVENT                  ; event notif. types to subscribe to (req'd)
;buffer_size=10                ; event buffer queue size (default 10)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=-1                   ; the relative start priority (default -1)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; autorestart if exited after running (def: unexpected)
;exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=false         ; redirect_stderr=true is not allowed for eventlisteners
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions
;serverurl=AUTO                ; override serverurl computation (childutils)

; The below sample group section shows all possible group values,
; create one or more 'real' group: sections to create "heterogeneous"
; process groups.

;[group:thegroupname]
;programs=progname1,progname2  ; each refers to 'x' in [program:x] definitions
;priority=999                  ; the relative start priority (default 999)

[program:base_service_9000]
command=python base_service.py 9000
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
stdout_logfile=/root/workspace/news_api_ml/base_service/log/supervisor.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true

[program:news_api_ml_9995]
command=python startService.py 9995
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
stdout_logfile=/root/workspace/news_api_ml/classification/log/supervisor_9995.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true


[program:news_api_ml_9994]
command=python startService.py 9994
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
stdout_logfile=/root/workspace/news_api_ml/classification/log/supervisor_9994.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true


[program:news_api_ml_9993]
command=python startService.py 9993
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
stdout_logfile=/root/workspace/news_api_ml/classification/log/supervisor_9993.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true


[program:news_api_ml_9992]
command=python startService.py 9992
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
stdout_logfile=/root/workspace/news_api_ml/classification/log/supervisor_9992.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true

[program:ads_remove_9996]
command=python ads_remove_service.py 9996
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
#stdout_logfile=/root/workspace/news_api_ml/supervisor_log/9996.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true

[program:ads_remove_9997]
command=python ads_remove_service.py 9997
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
#stdout_logfile=/root/workspace/news_api_ml/supervisor_log/9997.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true

[program:ads_remove_9998]
command=python ads_remove_service.py 9998
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
#stdout_logfile=/root/workspace/news_api_ml/supervisor_log/9998.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true

[program:ads_remove_9999]
command=python ads_remove_service.py 9999
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
redirect_stderr = true ;把stderr重定向到stdout
#stdout_logfile=/root/workspace/news_api_ml/supervisor_log/9999.log
#stderr_logfile=/root/workspace/news_api_ml/base_service_err.log
stopasgroup=true

;[program:lda_9985]
;command=python lda_service.py 9985
;directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
;autostart=false
;stdout_logfile=/root/workspace/news_api_ml/lda_service_9985.log
;stderr_logfile=/root/workspace/news_api_ml/lda_service_err_9985.log

[program:lda_9987]
command=python lda_service.py 9987
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
;stdout_logfile=/root/workspace/news_api_ml/log/lda/lda_service_9987.log
stderr_logfile=/root/workspace/news_api_ml/graphlab_lda/log/super_err_9987.log
stopasgroup=true

[program:lda_9988]
command=python lda_service.py 9988
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
;stdout_logfile=/root/workspace/news_api_ml/log/lda/lda_service_9988.log
stderr_logfile=/root/workspace/news_api_ml/graphlab_lda/log/super_err_9988.log
stopasgroup=true

[program:lda_9989]
command=python lda_service.py 9989
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
;stdout_logfile=/root/workspace/news_api_ml/log/lda/lda_service_9989.log
stderr_logfile=/root/workspace/news_api_ml/graphlab_lda/log/super_err_9989.log
stopasgroup=true


[program:lda_9990]
command=python lda_service.py 9990
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
;stdout_logfile=/root/workspace/news_api_ml/log/lda/lda_service_9990.log
stderr_logfile=/root/workspace/news_api_ml/graphlab_lda/log/super_err_9990.log
stopasgroup=true

[program:kmeans_9981]
command=python kmeans_service.py 9981
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/graphlab_kmeans/log/super_err_9981.log
stopasgroup=true

[program:kmeans_9979]
command=python kmeans_service.py 9979
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/graphlab_kmeans/log/super_err_9979.log
stopasgroup=true

[program:kmeans_9978]
command=python kmeans_service.py 9978
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/graphlab_kmeans/log/super_err_9978.log
stopasgroup=true

[program:kmeans_9977]
command=python kmeans_service.py 9977
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/graphlab_kmeans/log/super_err_9977.log
stopasgroup=true

[program:simhash_9969]
command=python simhash_service.py 9969
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/sim_hash/log/super_err_9969.log
stopasgroup=true

[program:simhash_9970]
command=python simhash_service.py 9970
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/sim_hash/log/super_err_9970.log
stopasgroup=true

[program:multi_vp_9963]
command=python multi_viewpoint_service.py 9963
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/multi_viewpoint/log/super_err_9963.log
stopasgroup=true

[program:multi_vp_9964]
command=python multi_viewpoint_service.py 9964
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/multi_viewpoint/log/super_err_9964.log
stopasgroup=true

[program:multi_vp_9965]
command=python multi_viewpoint_service.py 9965
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/multi_viewpoint/log/super_err_9965.log
stopasgroup=true

[program:multi_vp_9966]
command=python multi_viewpoint_service.py 9966
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/multi_viewpoint/log/super_err_9966.log
stopasgroup=true


[program:cf_9949]
command=python cf_service.py 9949
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/user_based_cf/log/super_err_9949.log
stopasgroup=true

[program:cf_9948]
command=python cf_service.py 9948
directory=/root/workspace/news_api_ml              ; directory to cwd to before exec (def no cwd)
autostart=false
startsecs = 5
autorestart = true
starttries = 3
stderr_logfile=/root/workspace/news_api_ml/user_based_cf/log/super_err_9948.log
stopasgroup=true

[program:test_no_log]
command=python test.py
directory=/root/test              ; directory to cwd to before exec (def no cwd)
autostart=false

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

;[include]
;files = relative/directory/*.ini
